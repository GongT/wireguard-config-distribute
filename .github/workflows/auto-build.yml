name: Go

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  cancel:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - name: cancel running workflows
        uses: GongT/cancel-previous-workflows@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
  pre-release:
    name: Create latest release
    runs-on: ubuntu-latest
    steps:
      - name: Delete Old
        uses: author/action-rollback@master
        with:
          tag: latest
          delete_orphan_tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create New
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: latest
          body: Auto build from ${{ github.sha }}
          draft: false
          prerelease: true
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        project:
          - client
          - server
          - tool
        exclude:
          - os: windows-latest
            project: server
    needs: pre-release
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Prepare golang
        uses: actions/setup-go@v2
        with:
          stable: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: Get dependencies
        run: go mod download

      - name: Setup my argument generater
        run: |
          cd ..
          go get -v -u github.com/GongT/go-generate-struct-interface/cmd/go-generate-struct-interface github.com/golang/protobuf/protoc-gen-go

      - name: Build
        shell: pwsh
        run: ./scripts/build.ps1 ${{ matrix.project }}

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: result
      #     path: dist/${{ matrix.project }}*

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:
            ${{ steps.create_release.outputs.upload_url }}
            # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: dist/${{ matrix.project }}*
          asset_name: ${{ matrix.project }}
          asset_content_type: application/octet-stream
