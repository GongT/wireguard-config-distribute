name: Go

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  cancel:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - name: cancel running workflows
        uses: GongT/cancel-previous-workflows@v1.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
          DELETE: 'yes'
  prerelease:
    name: Create latest release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: GongT/actions-recreate-release@816c561b1602011360c45bb55c3fb9a19ddeaad2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Latest
          body: Auto build from ${{ github.sha }} (master)
          draft: false
          prerelease: true
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        project:
          - client
          - server
          - tool
        exclude:
          - os: windows-latest
            project: server
    needs: prerelease
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Prepare golang
        uses: actions/setup-go@v2
        with:
          stable: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: Get dependencies
        run: |
          go mod download
          cd ..
          go get -v -u github.com/GongT/go-generate-struct-interface/cmd/go-generate-struct-interface github.com/golang/protobuf/protoc-gen-go

      - name: Build
        shell: pwsh
        run: ./scripts/build.ps1 ${{ matrix.project }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prerelease.outputs.upload_url }}
          asset_path: dist/${{ matrix.project }}*
          asset_name: ${{ matrix.project }}
          asset_content_type: application/octet-stream
